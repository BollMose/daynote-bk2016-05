// GCD
GCD is still in swift
dispatch_async(dispatch_get_main_queue()) {

}

// UIControl
UIControl -> UIView

// classOnlyProtocol
is a protocol, but can as view a instance from NSObject, such as delegate
but is still a protocol not a class.
swift is single inheritance only
is the same as: 
@objc protocol xxProtocol {

}
protocol xxProtocol : class {

}
// swift/objc/protocol
in objc, you can define a protocol as delegate directly, because of default as NSObject<xxProtocol>
but in swift, you can not do it, you need set xxProtocol as class:
protocol xxProtocol : class
In swift, class conform a protocol or inhrit from a class has the same format:
class xxClass : xxBaseClass, xxProtocol   --> This is Class-Only protocols

// NSArray/NSMutableArray
can only store object from NSObject, can not store any instance of struct.
But can store default type 
For swift, do not use NSArray or others, use collection type if possible. -->Swift’s Array type is bridged to Foundation’s NSArray class.

// crash log symbolize
tools: symbolicatecrash

// armv7/arm64
view type of file: dwarfdump --uuid xx.app.dSYM

// method 1 ( not correct)
find crash point: atos -arch arm64 -o ABC.app/ABC 0x0000000100302974

// method 2
export DEVELOPER_DIR=/Applications/Xcode.app/Contents/Developer
symbolicatecrash xx.crash
symbolicatecrash -v xx.crash Abc.app.dSYM

# ios
// 0505-0518
edgesForExtendedLayout: there are multi-properties and method to set that value

// 0506
- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath 
: do not return nil, which can invoke assert fail

// 0520
delegate need define as weak, even in swift

# and
// 0506
Java can use switch on String after JDK7

# A simple gradle file
apply plugin: 'com.android.application'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"

    defaultConfig {
        applicationId "com.bell.xtea"
        minSdkVersion 21
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:23.3.0'
    compile 'com.android.support:design:23.3.0'
    compile 'org.scribe:scribe:1.3.5'
}
